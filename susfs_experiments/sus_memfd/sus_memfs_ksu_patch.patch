diff --git a/kernel/core_hook.c b/kernel/core_hook.c
index a73af8be9c28..6cf40798379e 100644
--- a/kernel/core_hook.c
+++ b/kernel/core_hook.c
@@ -952,10 +952,28 @@
 			if (copy_to_user((void __user*)arg5, &error, sizeof(error)))
 				pr_info("susfs: copy_to_user() failed\n");
 			return 0;
 		}
 #endif // #ifdef CONFIG_KSU_SUSFS_SUS_SU
+#ifdef CONFIG_KSU_SUSFS_SUS_MEMFD
+		if (arg2 == CMD_SUSFS_ADD_SUS_MEMFD) {
+			int error = 0;
+			if (!ksu_access_ok((void __user*)arg3, sizeof(struct st_susfs_sus_memfd))) {
+				pr_err("susfs: CMD_SUSFS_ADD_SUS_MEMFD -> arg3 is not accessible\n");
+				return 0;
+			}
+			if (!ksu_access_ok((void __user*)arg5, sizeof(error))) {
+				pr_err("susfs: CMD_SUSFS_ADD_SUS_MEMFD -> arg5 is not accessible\n");
+				return 0;
+			}
+			error = susfs_add_sus_memfd((struct st_susfs_sus_memfd __user*)arg3);
+			pr_info("susfs: CMD_SUSFS_ADD_SUS_MEMFD -> ret: %d\n", error);
+			if (copy_to_user((void __user*)arg5, &error, sizeof(error)))
+				pr_info("susfs: copy_to_user() failed\n");
+			return 0;
+		}
+#endif //#ifdef CONFIG_KSU_SUSFS_SUS_MEMFD
 		if (arg2 == CMD_SUSFS_ENABLE_AVC_LOG_SPOOFING) {
 			int error = 0;
 			if (arg3 != 0 && arg3 != 1) {
 				pr_err("susfs: CMD_SUSFS_ENABLE_AVC_LOG_SPOOFING -> arg3 can only be 0 or 1\n");
 				return 0;
