diff --git a/kernel/core_hook.c b/kernel/core_hook.c
index feade9a..7618fc6 100644
--- a/kernel/core_hook.c
+++ b/kernel/core_hook.c
@@ -1000,25 +1000,46 @@ static void ksu_try_umount(const char *mnt, bool check_mnt, int flags)
 #ifdef CONFIG_KSU_SUSFS_TRY_UMOUNT
 void susfs_try_umount_all(uid_t uid) {
 	susfs_try_umount(uid);
 	/* For Legacy KSU only */
 	ksu_try_umount("/system", true, 0, uid);
 	ksu_try_umount("/system_ext", true, 0, uid);
 	ksu_try_umount("/vendor", true, 0, uid);
 	ksu_try_umount("/product", true, 0, uid);
 	ksu_try_umount("/odm", true, 0, uid);
 	// - For '/data/adb/modules' we pass 'false' here because it is a loop device that we can't determine whether 
 	//   its dev_name is KSU or not, and it is safe to just umount it if it is really a mountpoint
 	ksu_try_umount("/data/adb/modules", false, MNT_DETACH, uid);
 	/* For both Legacy KSU and Magic Mount KSU */
 	ksu_try_umount("/debug_ramdisk", true, MNT_DETACH, uid);
 	ksu_try_umount("/sbin", false, MNT_DETACH, uid);
 	
 	// try umount hosts file
 	ksu_try_umount("/system/etc/hosts", false, MNT_DETACH, uid);
 
 	// try umount lsposed dex2oat bins
 	ksu_try_umount("/apex/com.android.art/bin/dex2oat64", false, MNT_DETACH, uid);
 	ksu_try_umount("/apex/com.android.art/bin/dex2oat32", false, MNT_DETACH, uid);
+	
+	
+	// try umount pixelify gphotos spoof configs
+	ksu_try_umount("/system/etc/sysconfig/pixel_2017_exclusive.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/system/etc/sysconfig/pixel_2018_exclusive.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/system/etc/sysconfig/pixel_2019_exclusive.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2016_exclusive.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2017_exclusive.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2018_exclusive.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2019_exclusive.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2017.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2018.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2019.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2019_midyear.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2020.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2020_midyear.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2021.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2021_midyear.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2022.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2022_midyear.xml", false, MNT_DETACH, uid);
+	ksu_try_umount("/product/etc/sysconfig/pixelify_experience.xml", false, MNT_DETACH, uid);
 }
 #endif
 
@@ -1075,55 +1096,75 @@ int ksu_handle_setuid(struct cred *new, const struct cred *old)
 #ifdef CONFIG_KSU_SUSFS_SUS_MOUNT
 out_ksu_try_umount:
 #endif
 	if (!ksu_uid_should_umount(new_uid.val)) {
 		return 0;
 	} else {
 #ifdef CONFIG_KSU_DEBUG
 		pr_info("uid: %d should not umount!\n", current_uid().val);
 #endif
 	}
 #ifndef CONFIG_KSU_SUSFS_SUS_MOUNT
  	// check old process's selinux context, if it is not zygote, ignore it!
  	// because some su apps may setuid to untrusted_app but they are in global mount namespace
  	// when we umount for such process, that is a disaster!
 	bool is_zygote_child = ksu_is_zygote(old->security);
 #endif
 	if (!is_zygote_child) {
 		pr_info("handle umount ignore non zygote child: %d\n",
 			current->pid);
 		return 0;
 	}
 #ifdef CONFIG_KSU_DEBUG
 	// umount the target mnt
 	pr_info("handle umount for uid: %d, pid: %d\n", new_uid.val,
 		current->pid);
 #endif
 
 #ifdef CONFIG_KSU_SUSFS_TRY_UMOUNT
 	// susfs come first, and lastly umount by ksu, make sure umount in reversed order
 	susfs_try_umount_all(new_uid.val);
 #else
 
 	// fixme: use `collect_mounts` and `iterate_mount` to iterate all mountpoint and
 	// filter the mountpoint whose target is `/data/adb`
 	ksu_try_umount("/system", true, 0);
 	ksu_try_umount("/system_ext", true, 0);
 	ksu_try_umount("/vendor", true, 0);
 	ksu_try_umount("/product", true, 0);
 	ksu_try_umount("/data/adb/modules", false, MNT_DETACH);
 
 	// try umount ksu temp path
 	ksu_try_umount("/debug_ramdisk", false, MNT_DETACH);
 	ksu_try_umount("/sbin", false, MNT_DETACH);
 	
 	// try umount hosts file
 	ksu_try_umount("/system/etc/hosts", false, MNT_DETACH);
 
 	// try umount lsposed dex2oat bins
 	ksu_try_umount("/apex/com.android.art/bin/dex2oat64", false, MNT_DETACH);
 	ksu_try_umount("/apex/com.android.art/bin/dex2oat32", false, MNT_DETACH);
+	
+	// try umount pixelify gphotos spoof configs
+	ksu_try_umount("/system/etc/sysconfig/pixel_2017_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/system/etc/sysconfig/pixel_2018_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/system/etc/sysconfig/pixel_2019_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2016_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2017_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2018_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2019_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2017.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2018.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2019.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2019_midyear.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2020.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2020_midyear.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2021.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2021_midyear.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2022.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2022_midyear.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixelify_experience.xml", false, MNT_DETACH);
 #endif
 	return 0;
 }
 
 // Init functons
