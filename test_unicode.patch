diff --git a/fs/susfs.c b/fs/susfs.c
index 9c315023a..d5ab7ca9c 100644
--- a/fs/susfs.c
+++ b/fs/susfs.c
@@ -260,19 +260,48 @@
 	return (base->d_inode->i_mapping->flags & BIT_ANDROID_SDCARD_ROOT_DIR);
 }
 
+static void strip_unicode_utf8(const char *inp, char *op, size_t op_size) {
+	const char *src = inp;
+	char *dst = op;
+	char *dst_end = op + op_size - 1;
+	
+	if (op_size == 0)
+		return;
+	
+	
+	while (*src && dst < dst_end) {
+		unsigned char c = (unsigned char)*src;
+		if (c < 0x80) {
+			*dst++ = *src++;
+		} else if ((c & 0xE0) == 0xC0) {
+			src += 2;
+		} else if ((c & 0xF0) == 0xE0) {
+			src += 3;
+		} else if ((c & 0xF8) == 0xF0) {
+			src += 4;
+		} else {
+			src++;
+		}
+	}
+	*dst = '\0';
+}
+
 bool susfs_is_sus_android_data_d_name_found(const char *d_name) {
 	struct st_susfs_sus_path_list *cursor = NULL, *temp = NULL;
+	char ascii_only[SUSFS_MAX_LEN_PATHNAME] = {0};
 
 	if (d_name[0] == '\0') {
 		return false;
 	}
+	
+	strip_unicode_utf8(d_name, ascii_only, sizeof(ascii_only));
 
 	list_for_each_entry_safe(cursor, temp, &LH_SUS_PATH_ANDROID_DATA, list) {
 		// - we use strstr here because we cannot retrieve the dentry of fuse_dentry
 		//   and attacker can still use path travesal attack to detect the path, but
 		//   lucky we can check for the uid so it won't let them fool us
-		if (!strncmp(d_name, cursor->info.target_pathname, cursor->path_len) &&
-		    (d_name[cursor->path_len] == '\0' || d_name[cursor->path_len] == '/') &&
+		if (!strncmp(ascii_only, cursor->info.target_pathname, cursor->path_len) &&
+			(ascii_only[cursor->path_len] == '\0' || ascii_only[cursor->path_len] == '/') &&
 			is_i_uid_in_android_data_not_allowed(cursor->info.i_uid))
 		{
 			SUSFS_LOGI("hiding path '%s'\n", cursor->target_pathname);
